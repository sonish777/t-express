(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"+sQV":function(e,t,r){"use strict";r.r(t),r.d(t,"_frontmatter",(function(){return s})),r.d(t,"default",(function(){return p}));var a=r("IKa1"),n=r("Yh9w"),i=(r("r0ML"),r("V0Ug")),o=r("sN0p");r("xH0s");const d=["components"],s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!Object.prototype.hasOwnProperty.call(s,"__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/middlewares.mdx"}});const l={_frontmatter:s},c=o.a;function p(e){let{components:t}=e,r=Object(n.a)(e,d);return Object(i.b)(c,Object(a.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"middlewares-and-providers"},"Middlewares and Providers"),Object(i.b)("p",null,"Middlewares are basically Express middlewares. Middleware Providers on the other hand are also middlewares but they require extra configuration and have extra logic attached to them. They help to segregate such logic to the concerned middleware being applied."),Object(i.b)("h2",{id:"creating-a-middleware-provider"},"Creating a middleware provider"),Object(i.b)("p",null,"Middleware providers are created as classes implementing the ProviderStaticMethod interface that enforces a static ",Object(i.b)("inlineCode",{parentName:"p"},"register")," method that takes ",Object(i.b)("inlineCode",{parentName:"p"},"Express.App")," as the first argument and an optional second argument that can be used to configure the middleware as needed."),Object(i.b)("h3",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-javascript"},"\nclass CORSProvider implements ProviderStaticMethod<typeof CORSProvider> {\n    public static register(app: Express, whitelist: string[] = []) {\n        if (process.env.NODE_ENV === 'development') {\n            app.use(cors());\n        } else {\n            whitelist = [cmsUrl, apiUrl, ...whitelist];\n            app.use(\n                cors({\n                    origin: function (requestOrigin, callback) {\n                        // Whitelist the request origin\n                    },\n                })\n            );\n        }\n    }\n}\n\n")),Object(i.b)("p",null,"In above above example, ",Object(i.b)("inlineCode",{parentName:"p"},"CORSProvider")," is a middleware provider for applying the ",Object(i.b)("inlineCode",{parentName:"p"},"cors")," middleware. The first argument is the Express.Application. The second argument is an array of string URLs that needs to be whitelisted for allowing CORS."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Passing ",Object(i.b)("inlineCode",{parentName:"p"},"<typeof CORSProvider>")," is needed to enforce overriding of the static ",Object(i.b)("inlineCode",{parentName:"p"},"register")," method.")),Object(i.b)("h2",{id:"applying-middleware-providers"},"Applying Middleware Providers"),Object(i.b)("p",null,"Middleware providers are registered during the server startup process. There are 2 different ways of applying the middleware provider."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Middleware Providers that ",Object(i.b)("strong",{parentName:"li"},"do not")," require the second configuration argument")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-javascript"},"server.startup({\n    middlewareProviders: [PassportProvider],\n});\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"The ",Object(i.b)("inlineCode",{parentName:"p"},"register")," method in ",Object(i.b)("inlineCode",{parentName:"p"},"PassportProvider")," doesn't require the second configuration argument.")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Middleware Providers that ",Object(i.b)("strong",{parentName:"li"},"require")," the second configuration argument. For this, use the ",Object(i.b)("inlineCode",{parentName:"li"},"provideMiddleware")," function from the core package.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-javascript"},"\nserver.startup({\n    middlewareProviders: [\n        provideMiddleware<string[]>(CORSProvider, ['url_to_whitelist']),\n    ]\n});\n\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},Object(i.b)("inlineCode",{parentName:"p"},"<string[]>")," is used to add type support for passing argument to the provider.")))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!Object.prototype.hasOwnProperty.call(p,"__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/middlewares.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-middlewares-mdx-b5994db52ec56a198d34.js.map