(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{yFnT:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n("IKa1"),o=n("Yh9w"),s=(n("r0ML"),n("V0Ug")),i=n("sN0p");n("xH0s");const r=["components"],c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!Object.prototype.hasOwnProperty.call(c,"__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/queue.mdx"}});const b={_frontmatter:c},p=i.a;function u(e){let{components:t}=e,n=Object(o.a)(e,r);return Object(s.b)(p,Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"queues"},"Queues"),Object(s.b)("p",null,"Texpress uses RabbitMQ under the hood to manage queues and message passing. RabbitMQService comes as a seprate shared package in texpress. The service is responsible for handling connections to the RabbitMQ server. There are two parts to the RabbitMQ Service, a ",Object(s.b)("inlineCode",{parentName:"p"},"Publisher")," and a ",Object(s.b)("inlineCode",{parentName:"p"},"Consumer"),".  "),Object(s.b)("p",null,"While the ",Object(s.b)("inlineCode",{parentName:"p"},"Publisher")," is just an injectable service that you can inject to publish messages. The ",Object(s.b)("inlineCode",{parentName:"p"},"Consumer")," is a separate application that serves independently. Once you serve your consumer application, you can check its status by going to the URL:\n",Object(s.b)("inlineCode",{parentName:"p"},"http://localhost:9999/healthz"),". You may replace the PORT with the one you've set in the config file."))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!Object.prototype.hasOwnProperty.call(u,"__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/queue.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-queue-mdx-a52e907d1f9e9c8d358f.js.map