(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"1qfI":function(e,r,t){"use strict";t.r(r),t.d(r,"_frontmatter",(function(){return p})),t.d(r,"default",(function(){return b}));var a=t("IKa1"),n=t("Yh9w"),i=(t("r0ML"),t("V0Ug")),o=t("sN0p");t("xH0s");const s=["components"],p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!Object.prototype.hasOwnProperty.call(p,"__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/server.mdx"}});const l={_frontmatter:p},c=o.a;function b(e){let{components:r}=e,t=Object(n.a)(e,s);return Object(i.b)(c,Object(a.a)({},l,t,{components:r,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"server"},"Server"),Object(i.b)("p",null,"Every application starts with a server imported from the ",Object(i.b)("inlineCode",{parentName:"p"},"core")," package."),Object(i.b)("h2",{id:"server-initialization"},"Server Initialization"),Object(i.b)("p",null,"Create a new Server instance by passing a controllers parameter. controllers refers to the set of controllers that handle incoming requests and responses."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-javascript"},"const server = new Server(controllers);\n")),Object(i.b)("h2",{id:"server-startup"},"Server Startup"),Object(i.b)("p",null,"The server is then started by calling the startup method of the Server instance. It takes two parameters: the port on which the server will run and an object with additional configuration options."),Object(i.b)("h3",{id:"configuration-options"},"Configuration Options"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"name"),Object(i.b)("br",{parentName:"p"}),"\n","The name option sets the name of the server, which is useful for logging and debugging purposes.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"middlewares"),Object(i.b)("br",{parentName:"p"}),"\n","The middlewares option is an array of middleware functions that will be used by the server. In this case, middlewares includes the methodOverride middleware.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"middlewareProviders"),Object(i.b)("br",{parentName:"p"}),"\n","The middlewareProviders option is an array of middleware providers. Middleware providers are used to add more advanced middleware to the server, such as CORS or Passport authentication."),Object(i.b)("blockquote",{parentName:"li"},Object(i.b)("p",{parentName:"blockquote"},"Middleware Providers are middlewares too, but the ones that require some extra configuration."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"exceptionHandlers"),Object(i.b)("br",{parentName:"p"}),"\n","The exceptionHandlers option is an array of exception handlers that will be used by the server. In this case, exceptionHandlers includes ApiExceptionHandler, which handles API exceptions and returns appropriate HTTP responses."),Object(i.b)("blockquote",{parentName:"li"},Object(i.b)("p",{parentName:"blockquote"},"Exception Handlers are classes that extends ",Object(i.b)("inlineCode",{parentName:"p"},"ExceptionHandler")," from core package."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"routePrefixes"),Object(i.b)("br",{parentName:"p"}),"\n","The routePrefixes option is used to set prefixes to cms or api routes.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"locals"),Object(i.b)("br",{parentName:"p"}),"\n","The locals option is an array of values that are forwared to the ",Object(i.b)("inlineCode",{parentName:"p"},"locals")," variable of ",Object(i.b)("inlineCode",{parentName:"p"},"Express.Response"),"."))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-javascript"},"server.startup(Number(ServerConfig.PORT), {\n    name: 'Server Name',\n    middlewares: [methodOverride('_')],\n    middlewareProviders: [\n        CORSProvider,\n        PassportProvider,\n        provideMiddleware <\n            StaticServeProviderOptions >\n            (StaticServeProvider,\n            {\n                pathToStaticContents: path.join(__dirname, '../public'),\n                prefix: 'static',\n            }),\n    ],\n    locals: [\n        { error: (req) => req.flash('error') }, // available in res.locals.error\n        { message: (req) => req.flash('message') },\n        { url: (req) => req.url },\n        { query: (req) => req.query },\n    ],\n    exceptionHandlers: [new ApiExceptionHandler()],\n    routePrefixes: {\n        cmsPrefix: 'cms',\n    },\n});\n")))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!Object.prototype.hasOwnProperty.call(b,"__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/server.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-server-mdx-940dddddb30e99302a21.js.map