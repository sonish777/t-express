{"version":3,"sources":["webpack:///../src/extras/rate-limiter.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"mappings":"yRAMaA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,iCAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAG5EF,YAAA,MACE,GAAM,iBAAe,iBAEvBA,YAAA,gCAA2BA,YAAA,cAAYG,WAAW,KAAG,sBAAoC,uEAAwEH,YAAA,cAAYG,WAAW,KAAG,SAAuB,iDAAkDH,YAAA,cAAYG,WAAW,KAAG,UAAwB,IAAKH,YAAA,cAAYG,WAAW,KAAG,eAA6B,yDAClXH,YAAA,UACEA,YAAA,MAAIG,WAAW,MAAI,uFACnBH,YAAA,MAAIG,WAAW,MAAI,wFACnBH,YAAA,MAAIG,WAAW,MAAI,4GAErBH,YAAA,sHACAA,YAAA,MACE,GAAM,yBAAuB,yBAE/BA,YAAA,2CAAsCA,YAAA,cAAYG,WAAW,KAAG,aAA2B,4FAA6FH,YAAA,cAAYG,WAAW,KAAG,qBAAmC,uCAAwCH,YAAA,cAAYG,WAAW,KAAG,WAAyB,wCAAyCH,YAAA,cAAYG,WAAW,KAAG,OAAqB,6DACxaH,YAAA,MACE,GAAM,kCAAgC,kCAExCA,YAAA,WAAKA,YAAA,QAAMG,WAAW,MAClB,UAAa,uBAAqB,qeActCH,YAAA,sEAAiEA,YAAA,cAAYG,WAAW,KAAG,WAAyB,2BAA4BH,YAAA,cAAYG,WAAW,KAAG,cAA4B,kBAAmBH,YAAA,cAAYG,WAAW,KAAG,YAA0B,qCAAsCH,YAAA,cAAYG,WAAW,KAAG,cAA4B,qCAAsCH,YAAA,cAAYG,WAAW,KAAG,YAA0B,WAGtc,IAAAT,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,iCAEDI,EAAWU,gBAAiB","file":"component---src-extras-rate-limiter-mdx-fef819f12da25e5ccae6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Users/Sonish Maharjan/Desktop/texpress/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"rate-limiting\"\n    }}>{`Rate Limiting`}</h1>\n    <p>{`Texpress provides a `}<inlineCode parentName=\"p\">{`RateLimiterService`}</inlineCode>{` utility class that can be used to limit the requests rate. It uses `}<inlineCode parentName=\"p\">{`Redis`}</inlineCode>{` under the hood. To use the service, call the `}<inlineCode parentName=\"p\">{`static`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`getInstance`}</inlineCode>{` method on the class which takes 3 optional argments.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`attempts: The maximum number of requests that can be made in the given time window.`}</li>\n      <li parentName=\"ul\">{`windowDuration: The time window in which the maximum number of requests can be made.`}</li>\n      <li parentName=\"ul\">{`blockDuration: The duration for which to block the user after exceeding the maximum number of requests.`}</li>\n    </ul>\n    <p>{`These arguments, if not provided, will fallback to the default values set in the configuration JSON file.`}</p>\n    <h2 {...{\n      \"id\": \"limiting-the-requests\"\n    }}>{`Limiting the Requests`}</h2>\n    <p>{`To limit the requests, use the `}<inlineCode parentName=\"p\">{`consume()`}</inlineCode>{` method to consume the attempt points. Once the maximum allowed attempts are consumed, a `}<inlineCode parentName=\"p\">{`TOO_MANY_REQUESTS`}</inlineCode>{` HTTP Exception will be thrown. The `}<inlineCode parentName=\"p\">{`consume`}</inlineCode>{` method takes a single argument, the `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` under which the consumed points are registered in redis.`}</p>\n    <h2 {...{\n      \"id\": \"creating-and-using-the-limiter\"\n    }}>{`Creating and Using the Limiter`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`class AuthService {\n    rateLimiterService: RateLimiterService;\n    constructor() {\n        // creates a limiter with maximum 5 attempts within 10 secods. And blocks for 10 secods if the maximum attemp is exceeded\n        this.rateLimiterService = RateLimiterService.getInstance(5, 10, 10);\n    }\n\n    async login(username: string, password: string) {\n        this.rateLimiterService.consume(username);\n        // Log in the user with the provided credentials\n    }\n}\n`}</code></pre>\n    <p>{`In above example, if the login method is called more than `}<inlineCode parentName=\"p\">{`5 times`}</inlineCode>{` within the duration of `}<inlineCode parentName=\"p\">{`10 seconds`}</inlineCode>{` with the same `}<inlineCode parentName=\"p\">{`username`}</inlineCode>{`, the request will be blocked for `}<inlineCode parentName=\"p\">{`10 seconds`}</inlineCode>{` for any login attempts with that `}<inlineCode parentName=\"p\">{`username`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}