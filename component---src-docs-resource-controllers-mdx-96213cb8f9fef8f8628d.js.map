{"version":3,"sources":["webpack:///../src/docs/resource-controllers.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-docs-resource-controllers-mdx-96213cb8f9fef8f8628d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Users/Sonish Maharjan/Desktop/texpress/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"resource-controllers\"\n    }}>{`Resource Controllers`}</h1>\n    <p>{`The resource controller is an extension of the CMS's `}<inlineCode parentName=\"p\">{`BaseController`}</inlineCode>{`. The ResourceController provides six additional methods to BaseController that supports basic CRUD operations for a resource. These methods are:`}</p>\n    <h2 {...{\n      \"id\": \"resource-crud-operations-and-their-routes\"\n    }}>{`Resource CRUD Operations and their routes`}</h2>\n    <h3 {...{\n      \"id\": \"index\"\n    }}>{`index()`}</h3>\n    <p><inlineCode parentName=\"p\">{`Route: GET  /`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`View: index.ejs`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Base Service Method: paginate()`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Description: `}</inlineCode>{`Renders the `}<inlineCode parentName=\"p\">{`index.ejs`}</inlineCode>{` view file in the viewPath. Also fetches a paginated list of the current resource from the database and sends it with the response.`}</p>\n    <h3 {...{\n      \"id\": \"create\"\n    }}>{`create()`}</h3>\n    <p><inlineCode parentName=\"p\">{`Route: GET /create`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`View: create.ejs`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Base Service Method: None`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Description: `}</inlineCode>{`Renders the `}<inlineCode parentName=\"p\">{`create.ejs`}</inlineCode>{` view file in the viewPath for rendering the create form for the resource.`}</p>\n    <h3 {...{\n      \"id\": \"add\"\n    }}>{`add()`}</h3>\n    <p><inlineCode parentName=\"p\">{`Route: POST /`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Base Service Method: create()`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Description: `}</inlineCode>{`This handler handles a POST request and creates a new resource.`}</p>\n    <h3 {...{\n      \"id\": \"edit\"\n    }}>{`edit()`}</h3>\n    <p><inlineCode parentName=\"p\">{`Route: GET /:id`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`View: edit.ejs`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Base Service Method: findOne()`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Description: `}</inlineCode>{`Renders the `}<inlineCode parentName=\"p\">{`edit.ejs`}</inlineCode>{` view file in the viewRoute for rendering the edit form for the resource. Also fetches the resource matching the current id (in request parameters) and sends it with the response.`}</p>\n    <h3 {...{\n      \"id\": \"update\"\n    }}>{`update()`}</h3>\n    <p><inlineCode parentName=\"p\">{`Route: PUT /:id`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Base Service Method: update()`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Description: `}</inlineCode>{`This handler handles a PUT request and updates the resource matching the current id (in request parameters) of the resouce.`}</p>\n    <h3 {...{\n      \"id\": \"delete\"\n    }}>{`delete()`}</h3>\n    <p><inlineCode parentName=\"p\">{`Route: DELETE /:id`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Base Service Method: delete()`}</inlineCode><br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`Description: `}</inlineCode>{`This handler handles a DELTE request and deletes the resource matching the current id (in request paramteres)`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`NOTE: All the above routes are prefixed with the base path set on the Controller.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"creating-resource-controllers-and-factory\"\n    }}>{`Creating Resource Controllers and Factory`}</h2>\n    <p>{`To extend the ResourceController, texpress provides a higer order factory function for generating resource controller for the given resource. The ResourceControllerFactory function generates a class definition for a controller that will handle CRUD operations for a given resource.\nThe factory function takes an options object with the following properties:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`resource: a string representing the name of the resource.`}</li>\n      <li parentName=\"ul\">{`findRelations: an optional array of strings representing the relations to be included in the query results.`}</li>\n      <li parentName=\"ul\">{`validators: an optional object with two properties: create and update, each containing an array of validators for their respective operations.`}</li>\n    </ul>\n    <p>{`ResourceControllerFactory also requires two generic type parameters that allows the ResourceController to be used with different types of resources and services, making it a versatile and reusable function.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The Model type parameter specifies the type of the entity model that the Service will operate on.`}</li>\n      <li parentName=\"ul\">{`The Service type parameter specifies the service that provides CRUD operations for the specified entity model.`}</li>\n    </ul>\n    <p>{`By using generics, the ResourceControllerFactory can generate a ResourceController that works with any type of entity model and service, without requiring any modifications to the code.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\n@Controller('/users')\nexport class UserController extends ResourceControllerFactory<UserEntity, UserService>({\n    resource: 'users',\n    findRelations: ['role'],\n    validators: {\n        create: [CreateUserValidator],\n        update: [UpdateUserValidator],\n    },\n}) {\n    _title = 'Users';\n    _viewPath = 'users';\n\n    constructor(\n        public readonly service: UserService\n    ) {\n        super(service);\n    }\n}\n\n`}</code></pre>\n    <p>{`With above example, an UserController is craeted with a set of CRUD routes that work out of the box.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GET /users`}</inlineCode>{` (Renders `}<inlineCode parentName=\"li\">{`views/users/index.ejs`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GET /users/create`}</inlineCode>{` (Renders `}<inlineCode parentName=\"li\">{`views/users/index.create.ejs`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`POST /users`}</inlineCode>{` (Creates the user resource in database)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GET /users/:id`}</inlineCode>{` (Renders `}<inlineCode parentName=\"li\">{`views/users/index.create.ejs`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`PUT /users/:id`}</inlineCode>{` (Updates the user resource matching the paramter `}<inlineCode parentName=\"li\">{`id`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`DELETE /users/:id`}</inlineCode>{` (Deletes the user resource matching the paramter `}<inlineCode parentName=\"li\">{`id`}</inlineCode>{`)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"overriding-methods\"\n    }}>{`Overriding Methods`}</h2>\n    <p>{`Sometimes, you may want to override some of the route handlers to add extra custom logic. To do this, simply override the respective method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\n@Controller('/users')\n@CanAccess\nexport class UserController extends ResourceControllerFactory<\n    UserEntity,\n    UserService\n>({\n    resource: 'users',\n    findRelations: ['role'],\n    validators: {\n        create: [CreateUserValidator],\n        update: [UpdateUserValidator],\n    },\n}) {\n    _title = 'Users';\n    _viewPath = 'users';\n\n    constructor(\n        public readonly service: UserService,\n        public readonly publisher: Publisher\n    ) {\n        super(service, publisher);\n    }\n\n    // overriding the create method\n    async create(req: Request, res: Response) {\n        this.page = 'create';\n        // some custom extra logic\n        return this.render(res);\n    }\n}\n\n`}</code></pre>\n    <p>{`Note that the @Route() decorator are not applied since they have already been configured in the ResourceController. You only need to override the handler as needed.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}