{"version":3,"sources":["webpack:///../src/extras/api.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"mappings":"yRAMaA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,wBAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAG5EF,YAAA,MACE,GAAM,kCAAgC,kCAExCA,YAAA,yOACAA,YAAA,MACE,GAAM,iBAAe,iBAEvBA,YAAA,iJAA4IA,YAAA,cAAYG,WAAW,KAAG,WAAyB,kBAC/LH,YAAA,UACEA,YAAA,MAAIG,WAAW,MACbH,YAAA,KAAGG,WAAW,MAAKH,YAAA,cAAYG,WAAW,KAAG,uBAAqC,iJAAkJH,YAAA,cAAYG,WAAW,KAAG,UAAwB,MAExRH,YAAA,MAAIG,WAAW,MACbH,YAAA,KAAGG,WAAW,MAAKH,YAAA,cAAYG,WAAW,KAAG,yBAAuC,6CAEtFH,YAAA,MAAIG,WAAW,MACbH,YAAA,KAAGG,WAAW,MAAKH,YAAA,cAAYG,WAAW,KAAG,2BAAyC,qFAExFH,YAAA,MAAIG,WAAW,MACbH,YAAA,KAAGG,WAAW,MAAKH,YAAA,cAAYG,WAAW,KAAG,oBAAkC,gCAAiCH,YAAA,cAAYG,WAAW,KAAG,eAA6B,QAASH,YAAA,cAAYG,WAAW,KAAG,gBAA8B,iBAE1OH,YAAA,MAAIG,WAAW,MACbH,YAAA,KAAGG,WAAW,MAAKH,YAAA,cAAYG,WAAW,KAAG,qBAAmC,uDAElFH,YAAA,MAAIG,WAAW,MACbH,YAAA,KAAGG,WAAW,MAAKH,YAAA,cAAYG,WAAW,KAAG,sBAAoC,mEAEnFH,YAAA,MAAIG,WAAW,MACbH,YAAA,KAAGG,WAAW,MAAKH,YAAA,cAAYG,WAAW,KAAG,qBAAmC,uBAElFH,YAAA,MAAIG,WAAW,MACbH,YAAA,KAAGG,WAAW,MAAKH,YAAA,cAAYG,WAAW,KAAG,8BAA4C,wEAAyEH,YAAA,cAAYG,WAAW,KAAG,cAA4B,QAASH,YAAA,cAAYG,WAAW,KAAG,gBAA8B,yCAE3RH,YAAA,MAAIG,WAAW,MACbH,YAAA,KAAGG,WAAW,MAAKH,YAAA,cAAYG,WAAW,KAAG,2BAAyC,oKAAqKH,YAAA,cAAYG,WAAW,KAAG,YAA0B,KAAMH,YAAA,cAAYG,WAAW,KAAG,UAAwB,SAAUH,YAAA,cAAYG,WAAW,KAAG,SAAuB,mBAKza,IAAAT,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,wBAEDI,EAAWU,gBAAiB","file":"component---src-extras-api-mdx-00c934fe09aafd3421bf.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Users/Sonish Maharjan/Desktop/texpress/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"texpress-api-and-built-in-apis\"\n    }}>{`Texpress API and Built-In APIs`}</h1>\n    <p>{`Texpress API comes with some built-in RESTful APIs ready to be consumed by the web application or mobile application as you desire. The built-in APIs include complete users registration operations with OTP verifications.`}</p>\n    <h2 {...{\n      \"id\": \"built-in-apis\"\n    }}>{`Built-in APIs`}</h2>\n    <p>{`All of the following APIs are prefixed by the API prefix used during the API Server startup. If not provided, the default API prefix `}<inlineCode parentName=\"p\">{`/api/v1`}</inlineCode>{` will be used.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`POST /auth/register`}</inlineCode>{`: Creates a new user and creates a new OTP code and sends the code to user's email address. Development environment uses a static OTP code of `}<inlineCode parentName=\"p\">{`000000`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`POST /auth/verify-otp`}</inlineCode>{`: Verify the OTP code sent in above API.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`POST /auth/set-password`}</inlineCode>{`: Once the OTP code has been verified, consume this API to set the new password.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`POST /auth/login`}</inlineCode>{`: Login the user and get the `}<inlineCode parentName=\"p\">{`accessToken`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`refreshToken`}</inlineCode>{` JWT tokens.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`GET /auth/profile`}</inlineCode>{`: Get the profile of the currently logged in user.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`POST /auth/refresh`}</inlineCode>{`: Refresh the user's expired access token using refresh token.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`POST /auth/logout`}</inlineCode>{`: Logout the user.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`POST /auth/forgot-password`}</inlineCode>{`: Request for a forgot password email. This process then follows the `}<inlineCode parentName=\"p\">{`verify-otp`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`set-password`}</inlineCode>{` APIs to reset the users's password.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`POST /auth/social-login`}</inlineCode>{`: Login with other social accounts. Requires the consumer to send the appropriate tokens/access tokens for the selected social login account. Currently supports `}<inlineCode parentName=\"p\">{`Facebook`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Google`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`Apple`}</inlineCode>{` login.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}