(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{unrE:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return b}));var i=n("IKa1"),a=n("Yh9w"),r=(n("r0ML"),n("V0Ug")),o=n("sN0p");n("xH0s");const s=["components"],c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!Object.prototype.hasOwnProperty.call(c,"__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/extras/rate-limiter.mdx"}});const m={_frontmatter:c},l=o.a;function b(e){let{components:t}=e,n=Object(a.a)(e,s);return Object(r.b)(l,Object(i.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"rate-limiting"},"Rate Limiting"),Object(r.b)("p",null,"Texpress provides a ",Object(r.b)("inlineCode",{parentName:"p"},"RateLimiterService")," utility class that can be used to limit the requests rate. It uses ",Object(r.b)("inlineCode",{parentName:"p"},"Redis")," under the hood. To use the service, call the ",Object(r.b)("inlineCode",{parentName:"p"},"static")," ",Object(r.b)("inlineCode",{parentName:"p"},"getInstance")," method on the class which takes 3 optional argments."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"attempts: The maximum number of requests that can be made in the given time window."),Object(r.b)("li",{parentName:"ul"},"windowDuration: The time window in which the maximum number of requests can be made."),Object(r.b)("li",{parentName:"ul"},"blockDuration: The duration for which to block the user after exceeding the maximum number of requests.")),Object(r.b)("p",null,"These arguments, if not provided, will fallback to the default values set in the configuration JSON file."),Object(r.b)("h2",{id:"limiting-the-requests"},"Limiting the Requests"),Object(r.b)("p",null,"To limit the requests, use the ",Object(r.b)("inlineCode",{parentName:"p"},"consume()")," method to consume the attempt points. Once the maximum allowed attempts are consumed, a ",Object(r.b)("inlineCode",{parentName:"p"},"TOO_MANY_REQUESTS")," HTTP Exception will be thrown. The ",Object(r.b)("inlineCode",{parentName:"p"},"consume")," method takes a single argument, the ",Object(r.b)("inlineCode",{parentName:"p"},"key")," under which the consumed points are registered in redis."),Object(r.b)("h2",{id:"creating-and-using-the-limiter"},"Creating and Using the Limiter"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-typescript"},"class AuthService {\n    rateLimiterService: RateLimiterService;\n    constructor() {\n        // creates a limiter with maximum 5 attempts within 10 secods. And blocks for 10 secods if the maximum attemp is exceeded\n        this.rateLimiterService = RateLimiterService.getInstance(5, 10, 10);\n    }\n\n    async login(username: string, password: string) {\n        this.rateLimiterService.consume(username);\n        // Log in the user with the provided credentials\n    }\n}\n")),Object(r.b)("p",null,"In above example, if the login method is called more than ",Object(r.b)("inlineCode",{parentName:"p"},"5 times")," within the duration of ",Object(r.b)("inlineCode",{parentName:"p"},"10 seconds")," with the same ",Object(r.b)("inlineCode",{parentName:"p"},"username"),", the request will be blocked for ",Object(r.b)("inlineCode",{parentName:"p"},"10 seconds")," for any login attempts with that ",Object(r.b)("inlineCode",{parentName:"p"},"username"),"."))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!Object.prototype.hasOwnProperty.call(b,"__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/extras/rate-limiter.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-extras-rate-limiter-mdx-763bcb11603d0ad23a45.js.map