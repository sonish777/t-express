{"version":3,"sources":["webpack:///../src/extras/cache.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"mappings":"2RAMaA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,0BAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAG5EF,YAAA,MACE,GAAM,WAAS,WAEjBA,YAAA,gCAA2BA,YAAA,cAAYG,WAAW,KAAG,gBAA8B,oIACnFH,YAAA,MACE,GAAM,WAAS,WAEjBA,YAAA,6DACAA,YAAA,UACEA,YAAA,MAAIG,WAAW,MAAKH,YAAA,cAAYG,WAAW,MAAI,8CAA4D,0JAC3GH,YAAA,MAAIG,WAAW,MAAKH,YAAA,cAAYG,WAAW,MAAI,uBAAqC,0CACpFH,YAAA,MAAIG,WAAW,MAAKH,YAAA,cAAYG,WAAW,MAAI,uBAAqC,yCAEtFH,YAAA,MACE,GAAM,SAAO,SAEfA,YAAA,+BAA0BA,YAAA,cAAYG,WAAW,KAAG,gBAA8B,0EAClFH,YAAA,WAAKA,YAAA,QAAMG,WAAW,MAClB,UAAa,uBAAqB,+xBAgCzC,IAAAT,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,0BAEDI,EAAWU,gBAAiB","file":"component---src-extras-cache-mdx-5d3377555c2b864af087.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/Users/Sonish Maharjan/Desktop/texpress/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"caching\"\n    }}>{`Caching`}</h1>\n    <p>{`Texpress provides a `}<inlineCode parentName=\"p\">{`CacheService`}</inlineCode>{` shared utility class for handling caching with redis. It provides methods to store, retrieve or delete data from a Redis cache.`}</p>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <p>{`The CacheService provides the following methods:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`set(key: string, value: any, ttl?: number)`}</inlineCode>{`: sets a value for a given key, with an optional TTL (in seconds). If TTL is not specified, the default TTL value is used from the configuration file.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`get<K>(key: string)`}</inlineCode>{`: retrieves the value for a given key.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`delete(key: string)`}</inlineCode>{`: deletes the value for a given key.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Simply, inject the `}<inlineCode parentName=\"p\">{`CacheService`}</inlineCode>{` instance where you need to use caching, and use the provided methods.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`\nclass SomeService {\n    constructor(\n        // Inject the cache service instance\n        private readonly cacheService: CacheService\n    ) {}\n\n    async fetchAndCacheSomeData() {\n        const data = this.fetchSomeHeavyProcessedData(); // Some data to be cached\n        // Set data to cache\n        await this.cacheService.set('my_heavy_data', data, 1000);\n        return data;\n    }\n\n    async getSomeDataFromCache() {\n        // Get the cached data using cached key.\n        const cachedData = await this.cacheService.get('my_heavy_data');\n        if (!cachedData) {\n            return this.fetchAndCacheSomeData();\n        }\n        return cachedData;\n    }\n\n    async clearDataFromCache() {\n        await this.cacheService.del('my_heavy_data');\n    }\n}\n\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}